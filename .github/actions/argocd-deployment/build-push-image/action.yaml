---
name: 'Build & Push Docker image'
description: 'Build and Push Docker image using default tags'
inputs:
  app_name:
    description: 'Name of the app to deploy.'
    required: true
  artifact_region:
    description: 'Region or zone for Google Artifact Registry.'
    required: false
    default: 'europe'
  artifact_repository_name:
    description: 'Name of the repo to upload image: ${url}/${repo}/${app}.'
    required: false
  branch_name:
    description: 'Current branch name.'
    required: true
  commit:
    description: 'The commit Id.'
    required: true
  commit_at:
    description: 'The time where the commit was created.'
    required: true
  context:
    description: 'Context to build image (default: ./).'
    required: false
    default: './'
  file:
    description: 'Path to Dockerfile.'
    required: false
    default: 'Dockerfile'
  image_tag:
    description: 'Tags for the docker image.'
    required: true
  pull:
    description: 'Whether to pull image from registry for cache building.'
    required: false
    default: 'true'
  push:
    description: 'Whether to push image to registry, or build locally.'
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    - run: |-
        if [[ -z "${{ inputs.artifact_repository_name }}" ]]; then
          echo "REPO_URL=${{ inputs.artifact_region }}-docker.pkg.dev/fcm-platform-artifacts-ceba/${{ inputs.app_name }}/${{ inputs.app_name }}" >> $GITHUB_ENV
        else
          echo "REPO_URL=${{ inputs.artifact_region }}-docker.pkg.dev/fcm-platform-artifacts-ceba/${{ inputs.artifact_repository_name }}/${{ inputs.app_name }}" >> $GITHUB_ENV
        fi

        if [[ -z "$GITHUB_ACTOR" ]]; then
          echo "USER_BUILDER=ArgoCD-Unknown-User" >> $GITHUB_ENV
        else
          echo "USER_BUILDER=$GITHUB_ACTOR" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: "Pull, Build & Push Docker image [branch tag] + [image tag]"
      uses: docker/build-push-action@v5
      if: inputs.branch_name != 'master' && inputs.branch_name != 'main'
      with:
        push: ${{ inputs.push }}
        file: ${{ inputs.file }}
        build-args: |
          APP_REVISION=${{ inputs.image_tag }}
          BRANCH=${{ inputs.branch_name }}
          USER_BUILDER=${{ env.USER_BUILDER }}
          COMMIT_SHA=${{ inputs.commit }}
          COMMIT_AT=${{ inputs.commit_at }}
        cache-from: type=registry,ref=${{ env.REPO_URL }}:${{ inputs.branch_name }}-cache
        cache-to: type=registry,ref=${{ env.REPO_URL }}:${{ inputs.branch_name }}-cache,mode=max,compression=zstd
        context: ${{ inputs.context }}
        tags: |
          ${{ env.REPO_URL }}:${{ inputs.branch_name }}
          ${{ env.REPO_URL }}:${{ inputs.image_tag }}

    - name: "Pull, Build & Push Docker image [branch tag] + [image tag] + [latest]"
      uses: docker/build-push-action@v5
      if: inputs.branch_name == 'master' || inputs.branch_name == 'main'
      with:
        push: ${{ inputs.push }}
        file: ${{ inputs.file }}
        build-args: |
          APP_REVISION=${{ inputs.image_tag }}
          BRANCH=${{ inputs.branch_name }}
          USER_BUILDER=${{ env.USER_BUILDER }}
          COMMIT_SHA=${{ inputs.commit }}
          COMMIT_AT=${{ inputs.commit_at }}
        context: ${{ inputs.context }}
        tags: |
          ${{ env.REPO_URL }}:${{ inputs.branch_name }}
          ${{ env.REPO_URL }}:${{ inputs.image_tag }}
          ${{ env.REPO_URL }}:latest
