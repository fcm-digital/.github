---
name: 'Checkout Repositories'
description: 'Checkout repositories (Local & helm-chart-app-values) for ArgoCD deployment.'

inputs:
  app_name:
    description: 'Name of the app to deploy.'
    required: true
    type: string
  branch_name:
    description: 'Current branch name.'
    required: false
    type: string
    default: ''
  env_to_deploy:
    description: 'The target environment where the changes will be applied.'
    required: false
    type: string
    default: ''
  github_token_checkout:
    description: 'The GitHub token to checkout helm_chart_template repository.'
    required: true
    type: string
  helm_chart_template_ref:
    description: 'The helm-chart-template branch name.'
    required: false
    type: string
    default: master

outputs:
  branch_name:
    description: 'The current Branch name.'
    value: ${{ steps.init-context-vars.outputs.branch_name }}
  env_to_deploy:
    description: 'The current Environment name.'
    value: ${{ steps.init-context-vars.outputs.env_to_deploy }}
  image_tag:
    description: 'The new Image Tag that will be deployed.'
    value: ${{ steps.init-context-vars.outputs.branch_name }}-${{ steps.init-context-vars.outputs.current_time }}-${{ steps.init-context-vars.outputs.short_sha }}

runs:
  using: "composite"
  steps:
    #Todo: Update to actions/checkout@v4
    - uses: actions/checkout@v3
      with:
        # Master or Main branch if 'inputs.branch_name' == ''
        ref: ${{ inputs.branch_name }}

    - id: init-context-vars
      run: |
        if [[ ${{ inputs.branch_name != '' }} ]]; then
          export BRANCH_NAME_LOCAL=$( echo ${{ inputs.branch_name }} )
        elif [[ '${{ github.event_name }}' == 'pull_request' ]]; then
          export BRANCH_NAME_LOCAL=$( echo $GITHUB_HEAD_REF )
        elif [[ '${{ github.event_name }}' == 'push' ]]; then
          export BRANCH_NAME_LOCAL=$( cut -d '/' -f 3 <<< "$GITHUB_REF" )
        else
          exit 1
        fi
        echo "branch_name=$( echo $BRANCH_NAME_LOCAL )" >> $GITHUB_OUTPUT

        if [[ ${{ inputs.env_to_deploy != '' }} ]] && [[ ${{ inputs.env_to_deploy != 'auto' }} ]]; then
          # echo "env_to_deploy=$( echo ${{ inputs.env_to_deploy }} )" >> $GITHUB_OUTPUT
          echo "env_to_deploy=$( echo ${{ inputs.branch_name }} )" >> $GITHUB_OUTPUT
        else
          echo "env_to_deploy=$( cut -d '-' -f 1 <<< "$BRANCH_NAME_LOCAL" )" >> $GITHUB_OUTPUT
        fi

        if [[ ${{ inputs.branch_name == '' }} ]]; then
          export COMMIT_TIME=$( git show -s --format=%ct )
          echo "current_time=$( date -d@$COMMIT_TIME -u +"%Y-%m-%dT%H%M")" >> $GITHUB_OUTPUT
          echo "short_sha=$( git rev-parse --short=7 HEAD )" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - uses: actions/checkout@v3
      with:
        repository: fcm-digital/helm-chart-template
        token: ${{ inputs.github_token_checkout }}
        ref: ${{ inputs.helm_chart_template_ref }}
        path: helm-chart-template

    - uses: actions/checkout@v3
      if: steps.init-context-vars.outputs.branch_name == 'master' || steps.init-context-vars.outputs.branch_name == 'main'
      with:
        repository: fcm-digital/helm-chart-${{ inputs.app_name }}-values
        token: ${{ inputs.github_token_checkout }}
        ref: ${{ env.BRANCH_NAME }}
        path: helm-chart-${{ inputs.app_name }}-values-prod

    - uses: actions/checkout@v3
      if: steps.init-context-vars.outputs.branch_name == 'manu-changes'
      with:
        repository: fcm-digital/helm-chart-${{ inputs.app_name }}-values
        token: ${{ inputs.github_token_checkout }}
        ref: staging
        path: helm-chart-${{ inputs.app_name }}-values-staging
