---
name: 'ArgoCD Get Env to Deploy On (Staging)'
description: 'Get environment to deploy on based on the image tag.'

inputs:
  allow_multiple_environments:
    description: 'Allow multiple environments to be deployed.'
    required: false
    default: 'false'
  app_name:
    description: 'The application name.'
    required: true
  branch_name:
    description: 'The branch name.'
    required: true
  github_token_checkout:
    description: 'The GitHub token to checkout the repositories.'
    required: true

outputs:
  env_to_deploy_on:
    description: 'The environment to deploy on.'
    value: ${{ steps.get-env-to-deploy-on.outputs.env_to_deploy_on }}

runs:
  using: "composite"
  steps:
    - id: checkout-helm-chart-values
      name: Checkout helm-chart-values repository
      uses: actions/checkout@v4
      with:
        repository: fcm-digital/helm-chart-${{ inputs.app_name }}-values
        token: ${{ inputs.github_token_checkout }}
        ref: staging
        path: helm-chart-values

    - id: get-env-to-deploy-on
      name: Get Environment to Deploy On
      run: |
        ENVIRONMENTS=$(find ./helm-chart-values/staging -name '*tag.*' -print0 | while IFS= read -r -d '' file; do
          if grep -q "${{ inputs.branch_name }}" "$file"; then
            echo "$file"
          fi
        done | awk -F'/' '{printf "%s%s", sep, $(NF-1); sep=", "} END {print ""}')
        if [ -n "$ENVIRONMENTS" ]; then
          if [ $(echo "$ENVIRONMENTS" | wc -w) -gt 1 ] && [ "${{ inputs.allow_multiple_environments }}" = 'false' ]; then
            echo "Error: More than one environment found for branch ${{ inputs.branch_name }} -> $ENVIRONMENTS"
          else
            echo "OK: Environment(s) found for branch ${{ inputs.branch_name }} -> $ENVIRONMENTS"
            echo "env_to_deploy_on=$ENVIRONMENTS" >> $GITHUB_OUTPUT
          fi
        else
          echo "OK: No environment found for branch ${{ inputs.branch_name }}"
        fi
      shell: bash
