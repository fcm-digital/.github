---
name: 'ArgoCD CLI Sync App'
description: 'ArgoCD CLI commands for App force syncing.'

inputs:
  app_name:
    description: 'Name of the app to deploy.'
    required: true
  app_region:
    description: 'Region of the app to deploy.'
    required: true
  argocd_auth_token:
    description: 'ArgoCD auth token with get/sync permissions over apps.'
    required: true
  argocd_url:
    description: 'ArgoCD URL (default: argocd.fcm.digital).'
    required: false
    default: 'argocd.fcm.digital'
  branch_name:
    description: 'Current branch name.'
    required: true
  changelog_slack_message:
    description: 'If true, the action will output the live/current image tag.'
    required: false
    default: 'false'
  env_to_deploy:
    description: 'Environment where the image will be deployed.'
    required: true
  label_filter:
    description: 'Label value to be used as a filter for selecting resources.'
    required: false

outputs:
  live_image_tag:
    description: 'The current Branch name.'
    value: ${{ steps.get-live-image-tag.outputs.live_image_tag }}

runs:
  using: "composite"
  steps:
    - name: Get live Image Tag
      if: inputs.changelog_slack_message == 'true' && inputs.env_to_deploy == 'prod'
      id: get-live-image-tag
      shell: bash
      run: ${{ github.action_path }}/get_live_imagetag_entrypoint.sh
      env:
        APP_NAME: ${{ inputs.app_name }}
        APP_REGION: ${{ inputs.app_region }}
        ARGOCD_AUTH_TOKEN: ${{ inputs.argocd_auth_token }}
        ARGOCD_URL: ${{ inputs.argocd_url }}
        ENV_TO_DEPLOY: ${{ inputs.env_to_deploy }}

    - id: argocd-cli-sync-app
      name: 'ArgoCD CLI Sync app'
      run: ${{ github.action_path }}/sync_app_entrypoint.sh
      env:
        APP_NAME: ${{ inputs.app_name }}
        APP_REGION: ${{ inputs.app_region }}
        ARGOCD_AUTH_TOKEN: ${{ inputs.argocd_auth_token }}
        ARGOCD_URL: ${{ inputs.argocd_url }}
        BRANCH_NAME: ${{ inputs.branch_name }}
        ENV_TO_DEPLOY: ${{ inputs.env_to_deploy }}
        LABEL_FILTER: ${{ inputs.label_filter }}
      shell: bash